{"version":3,"sources":["../../src/Pos.ts","../../src/Dim.ts","../../src/Msg.ts","../../src/Menu.ts","../../src/index.ts","../../src/Model.ts","../../src/Box.ts","../../src/StopEvent.ts","../../src/TeaMenu.ts","../../src/Popover.ts","../../src/ViewMenu.tsx","Demo.tsx","App.tsx","index.tsx"],"names":["Pos","x","y","p","this","Dim","w","h","d","tag","uuid","r","key","m","item","Menu","elements","select","e","isSelected","start","elems","i","length","just","nothing","down","getSelectedIndex","map","selectedIndex","findNextItemIndex","findPreviousItemIndex","nextIndex","selectIndex","withDefault","withDefaultSupply","toArray","indexOf","selected","getSelected","type","value","menuId","btoa","menuItemId","itemIndex","byId","id","Task","fromLambda","document","getElementById","Error","items","ListWithSelection","fromArray","userData","subMenu","maybeOf","separator","menuStatePlacing","position","menu","windowSize","state","error","child","navigatedWithKeyboard","model","Box","rect","height","width","box","pos","dim","stopEvent","preventDefault","stopPropagation","open","initialModel","Cmd","batch","perform","getWindowDimensions","gotWindowDimensions","u","gotUuid","postOpen","noCmd","attempt","menuTask","fromDomRect","getBoundingClientRect","gotMenuBox","withOut","mac","outMsg","openSubMenu","isNothing","none","menuItemTask","gotItemBox","update","msg","console","log","match","adjustPopover","err","collapseLastSubMenu","keyboardNavigated","mapLastMenu","lastModel","moveSelection","selectedItem","cmd","indexOfItem","Tuple","t2n","expandLastSubMenu","data","selectItem","itemBox","newModel","add","newModel2","childMsg","mco","windowEvents","WindowEvents","documentEvents","Sub","on","window","innerWidth","innerHeight","gotKeyDown","succeedLazy","f","isJust","fromNative","mapFirst","c","mapSecond","toNative","viewport","elem","vh","vw","newY","newH","overflowDown","newX","newW","overflowRight","ViewMenuItem","props","renderer","dispatch","selectedClass","className","onMouseMove","onClick","ViewMenu","renderItems","element","index","style","top","left","bottom","right","overflow","onContextMenu","visibility","menuMsg","mySubMenu2","mySubMenu1","myMenu","myRenderer","init","menuModel","lastClicked","view","display","alignItems","justifyContent","TM","onMouseDown","button","pageX","pageY","out","closeMenu","mm","mc","updateMenu","subscriptions","App","Demo","devTools","DevTools","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.fca3f46d.chunk.js","sourcesContent":["import {Dim} from \"./Dim\";\n\nexport class Pos {\n  constructor(\n      readonly x: number,\n      readonly y: number,\n  ) {\n  }\n\n  add(p: Pos): Pos {\n    return new Pos(\n      this.x + p.x,\n      this.y + p.y\n    )\n  }\n}\n\nexport function pos(x: number, y: number): Pos {\n  return new Pos(x, y);\n}\n","export class Dim {\n  constructor(\n      readonly w: number,\n      readonly h: number,\n  ) {\n  }\n}\n\nexport function dim(w: number, h: number): Dim {\n  return new Dim(w, h);\n}\n","import {Dim} from \"./Dim\";\nimport {Box} from \"./Box\";\nimport {Result} from \"react-tea-cup\";\nimport {Menu, MenuItem} from \"./Menu\";\n\nexport type Msg<T>\n    = { tag: 'got-window-dimensions', d: Dim }\n    | { tag: 'got-uuid', uuid: string }\n    | { tag: 'got-menu-box', r: Result<Error, Box> }\n    | { tag: 'key-down', key: string }\n    | { tag: 'mouse-move', item: MenuItem<T>, itemIndex: number }\n    | { tag: 'got-item-box', item: MenuItem<T>, r: Result<Error,Box> }\n    | { tag: 'item-clicked', item: MenuItem<T> }\n    | { tag: 'child-msg', m: Msg<T> };\n\nexport function gotWindowDimensions<T>(d: Dim): Msg<T> {\n  return {\n    tag: 'got-window-dimensions',\n    d\n  }\n}\n\nexport function gotUuid<T>(uuid: string): Msg<T> {\n  return {\n    tag: \"got-uuid\",\n    uuid\n  }\n}\n\nexport function gotMenuBox<T>(r: Result<Error, Box>): Msg<T> {\n  return {\n    tag: 'got-menu-box',\n    r\n  }\n}\n\nexport function gotKeyDown<T>(key: string): Msg<T> {\n  return {\n    tag: \"key-down\",\n    key\n  }\n}\n\nexport function childMsg<T>(m: Msg<T>): Msg<T> {\n  return {\n    tag: 'child-msg',\n    m\n  }\n}\n\nexport function gotItemBox<T>(item: MenuItem<T>, r: Result<Error,Box>): Msg<T> {\n  return {\n    tag: 'got-item-box',\n    item,\n    r\n  }\n}\n","import {\n  just,\n  ListWithSelection,\n  Maybe,\n  maybeOf,\n  nothing,\n  Task,\n} from 'react-tea-cup';\n\nexport class Menu<T> {\n  constructor(private readonly elements: ListWithSelection<MenuElement<T>>) {}\n\n  selectItem(item: MenuItem<T>): Menu<T> {\n    return new Menu(this.elements.select((e) => e === item));\n  }\n\n  get elems(): ReadonlyArray<MenuElement<T>> {\n    return this.elements.toArray();\n  }\n\n  get selectedItem(): Maybe<MenuItem<T>> {\n    const selected = this.elements.getSelected();\n    if (selected.type === 'Just' && selected.value.tag === 'item') {\n      return just(selected.value);\n    }\n    return nothing;\n  }\n\n  isSelected(item: MenuItem<T>): boolean {\n    return this.elements.isSelected(item);\n  }\n\n  private findNextItemIndex(start: number): Maybe<number> {\n    const elems = this.elems;\n    const s = start === elems.length - 1 ? 0 : start + 1;\n    for (let i = s; i < elems.length; i++) {\n      if (elems[i].tag === 'item') {\n        return just(i);\n      }\n    }\n    return nothing;\n  }\n\n  private findPreviousItemIndex(start: number): Maybe<number> {\n    const elems = this.elems;\n    const s = start === 0 ? elems.length - 1 : start - 1;\n    for (let i = s; i >= 0; i--) {\n      if (elems[i].tag === 'item') {\n        return just(i);\n      }\n    }\n    return nothing;\n  }\n\n  moveSelection(down: boolean): Menu<T> {\n    return this.elements\n      .getSelectedIndex()\n      .map((selectedIndex) => {\n        const mbNextIndex = down\n          ? this.findNextItemIndex(selectedIndex)\n          : this.findPreviousItemIndex(selectedIndex);\n        return mbNextIndex\n          .map((nextIndex) => new Menu(this.elements.selectIndex(nextIndex)))\n          .withDefault(this);\n      })\n      .withDefaultSupply(() => {\n        return new Menu(\n          this.elements.selectIndex(down ? 0 : this.elements.length() - 1),\n        );\n      });\n  }\n\n  indexOfItem(item: MenuItem<T>): Maybe<number> {\n    const i = this.elements.toArray().indexOf(item);\n    if (i === -1) {\n      return nothing;\n    }\n    return just(i);\n  }\n}\n\nexport type MenuElement<T> = MenuItem<T> | MenuSeparator;\n\nexport interface MenuItem<T> {\n  tag: 'item';\n  readonly userData: T;\n  readonly subMenu: Maybe<Menu<T>>;\n}\n\nexport interface MenuSeparator {\n  tag: 'separator';\n}\n\nexport function menu<T>(items: ReadonlyArray<MenuElement<T>>): Menu<T> {\n  return new Menu(ListWithSelection.fromArray(items));\n}\n\nexport function item<T>(userData: T, subMenu?: Menu<T>): MenuItem<T> {\n  return {\n    tag: 'item',\n    userData,\n    subMenu: maybeOf(subMenu),\n  };\n}\n\nexport const separator: MenuSeparator = {\n  tag: 'separator',\n};\n\nexport function menuId(uuid: string): string {\n  return `tm-${btoa(uuid)}`;\n}\n\nexport function menuItemId(menuId: string, itemIndex: number): string {\n  return `tm-item-${menuId}-${itemIndex}`;\n}\n\nexport function menuTask(uuid: string): Task<Error, HTMLElement> {\n  return byId(menuId(uuid));\n}\n\nexport function menuItemTask(\n  menuId: string,\n  itemIndex: number,\n): Task<Error, HTMLElement> {\n  return byId(menuItemId(menuId, itemIndex));\n}\n\nfunction byId(id: string): Task<Error, HTMLElement> {\n  return Task.fromLambda(() => {\n    const e = document.getElementById(id);\n    if (e === null) {\n      throw new Error('element not found with id:' + id);\n    }\n    return e;\n  });\n}\n","export * from './Model'\nexport * from './Msg'\nexport * from './Menu'\nexport * from './TeaMenu'\nexport * from './ViewMenu'\nexport * from './OutMsg'\nexport * from './StopEvent'\nexport * from './Pos'\nexport * from './Dim'\nexport * from './ItemRenderer'\n\n","import {Menu} from \"./Menu\";\nimport {Maybe, nothing} from \"react-tea-cup\";\nimport {Dim} from \"./Dim\";\nimport {Box} from \"./Box\";\nimport {Pos} from \"./Pos\";\n\nexport interface Model<T> {\n  readonly uuid: Maybe<string>;\n  readonly windowSize: Maybe<Dim>;\n  readonly menu: Menu<T>;\n  readonly state: MenuState;\n  readonly error: Maybe<Error>;\n  readonly child: Maybe<Model<T>>;\n  readonly navigatedWithKeyboard: boolean;\n}\n\nexport function initialModel<T>(menu: Menu<T>, position: Pos): Model<T> {\n  return {\n    uuid: nothing,\n    windowSize: nothing,\n    menu,\n    state: menuStatePlacing(position),\n    error: nothing,\n    child: nothing,\n    navigatedWithKeyboard: false,\n  }\n}\n\nexport type MenuState =\n    | { tag: 'placing', position: Pos }\n    | { tag: 'open', box: Box };\n\nexport function menuStatePlacing(position: Pos): MenuState {\n  return {\n    tag: 'placing',\n    position\n  }\n}\n\nexport function keyboardNavigated<T>(model: Model<T>, navigatedWithKeyboard: boolean = true): Model<T> {\n  return {...model, navigatedWithKeyboard }\n}\n","import {pos, Pos} from \"./Pos\";\nimport {dim, Dim} from \"./Dim\";\n\nexport class Box {\n  constructor(\n      readonly p: Pos,\n      readonly d: Dim\n  ) {\n  }\n\n  static fromDomRect(rect: DOMRect): Box {\n    const {x, y, height, width} = rect;\n    return box(pos(x,y), dim(width, height));\n  }\n\n}\n\nexport function box(p: Pos, d: Dim): Box {\n  return new Box(p, d);\n}\n\n","import {EventHandler} from \"react\";\n\nexport const stopEvent: EventHandler<any> = e => {\n  e.preventDefault();\n  e.stopPropagation();\n}\n","import {childMsg, gotItemBox, gotKeyDown, gotMenuBox, gotUuid, gotWindowDimensions, Msg,} from './Msg';\nimport {Cmd, just, Maybe, noCmd, nothing, Sub, Task, Tuple, uuid, WindowEvents,} from 'react-tea-cup';\nimport {initialModel, keyboardNavigated, Model} from './Model';\nimport {Menu, MenuItem, menuItemTask, menuTask,} from './Menu';\nimport {pos, Pos} from './Pos';\nimport {dim, Dim} from './Dim';\nimport {Box} from './Box';\nimport {adjustPopover} from './Popover';\nimport {OutMsg} from \"./OutMsg\";\n\nexport function open<T>(menu: Menu<T>, position: Pos): [Model<T>, Cmd<Msg<T>>] {\n  return [\n    initialModel(menu, position),\n    Cmd.batch([\n      Task.perform(getWindowDimensions, (d) => gotWindowDimensions(d)),\n      Task.perform(uuid(), (u) => gotUuid(u)),\n    ]),\n  ];\n}\n\nfunction postOpen<T>(\n    model: Model<T>,\n): [Model<T>, Cmd<Msg<T>>] {\n  if (model.uuid.type === 'Nothing') {\n    return noCmd(model);\n  }\n  if (model.windowSize.type === 'Nothing') {\n    return noCmd(model);\n  }\n  const cmd: Cmd<Msg<T>> = Task.attempt(\n      menuTask(model.uuid.value).map((e) => Box.fromDomRect(e.getBoundingClientRect())),\n      (x) => gotMenuBox(x),\n  );\n  return [model, cmd];\n}\n\nfunction withOut<T>(mac: [Model<T>, Cmd<Msg<T>>], outMsg: Maybe<OutMsg<T>> = nothing): [Model<T>, Cmd<Msg<T>>, Maybe<OutMsg<T>>] {\n  return [mac[0], mac[1], outMsg];\n}\n\nexport function update<T>(\n    msg: Msg<T>,\n    model: Model<T>,\n): [Model<T>, Cmd<Msg<T>>, Maybe<OutMsg<T>>] {\n  console.log('update', msg);\n  switch (msg.tag) {\n    case 'got-window-dimensions': {\n      return withOut(postOpen({\n        ...model,\n        windowSize: just(msg.d),\n      }));\n    }\n    case 'got-uuid': {\n      return withOut(postOpen({\n        ...model,\n        uuid: just(msg.uuid),\n      }));\n    }\n    case 'got-menu-box': {\n      return withOut(noCmd(\n          model.windowSize\n              .map((windowSize) => {\n                const newModel: Model<T> = msg.r.match(\n                    (box) =>\n                        ({\n                          ...model,\n                          state: {\n                            tag: 'open',\n                            box: adjustPopover(windowSize, box),\n                          },\n                        } as Model<T>),\n                    (err) => ({\n                      ...model,\n                      error: just(err),\n                    }),\n                );\n                return newModel;\n              })\n              .withDefault(model),\n      ));\n    }\n\n    case 'key-down': {\n      switch (msg.key) {\n        case 'Escape': {\n          return withOut(\n              collapseLastSubMenu(keyboardNavigated(model)),\n              model.child.isNothing() ? just({ tag: 'request-close' }) : nothing\n          );\n        }\n        case 'ArrowDown':\n        case 'ArrowUp': {\n          return withOut(mapLastMenu(keyboardNavigated(model), (lastModel) => {\n            return noCmd({\n              ...lastModel,\n              menu: lastModel.menu.moveSelection(msg.key === 'ArrowDown'),\n            });\n          }));\n        }\n        case 'ArrowLeft':\n          return withOut(collapseLastSubMenu(keyboardNavigated(model)));\n        case 'ArrowRight':\n          return withOut(expandLastSubMenu(keyboardNavigated(model)));\n        case 'Enter':\n        case ' ': {\n          return model.menu.selectedItem\n              .map(item => {\n                return withOut(noCmd(model), just({tag: \"item-selected\", data: item.userData }))\n              })\n              .withDefaultSupply(() => withOut(noCmd(model)));\n        }\n        default:\n          return withOut(noCmd(model));\n      }\n    }\n    case 'mouse-move': {\n      if (model.navigatedWithKeyboard) {\n        return withOut(noCmd(keyboardNavigated(model, false)));\n      }\n      if (model.uuid.type === 'Nothing') {\n        return withOut(noCmd(model));\n      }\n      // are we on an already selected item ?\n      if (model.menu.isSelected(msg.item)) {\n        return withOut(noCmd(model));\n      }\n      console.log(\"mouseEnter\", model);\n      const menu = model.menu.selectItem(msg.item);\n      const uuid = model.uuid.value;\n      return withOut(Tuple.t2n({...model, menu, child: nothing}, openSubMenu(uuid, msg.item, msg.itemIndex)));\n    }\n    case 'got-item-box': {\n      return withOut(msg.r.match(\n          (itemBox) => {\n            const newModel: Model<T> = {\n              ...model,\n              menu: model.menu.selectItem(msg.item),\n            };\n            return msg.item.subMenu\n                .map((subMenu) => {\n                  // we have a sub menu so we need\n                  // to open a new Menu !\n                  const mac = open(subMenu, itemBox.p.add(pos(itemBox.d.w, 0)));\n                  const newModel2: Model<T> = {\n                    ...newModel,\n                    child: just(mac[0]),\n                  };\n                  return Tuple.t2n(newModel2, mac[1].map(childMsg));\n                })\n                .withDefaultSupply(() => {\n                  // close any existing child !\n                  return newModel.child\n                      .map(() => noCmd<Model<T>, Msg<T>>({...model, child: nothing}))\n                      .withDefaultSupply(() => noCmd(model));\n                });\n          },\n          (err) => noCmd({...model, error: just(err)}),\n      ));\n    }\n    case 'child-msg': {\n      return model.child\n          .map((child) => {\n            const mco = update(msg.m, child);\n            const newModel: Model<T> = {\n              ...model,\n              child: just(mco[0]),\n            };\n            return withOut(Tuple.t2n(newModel, mco[1].map(childMsg)), mco[2]);\n          })\n          .withDefaultSupply(() => withOut(noCmd(model)));\n    }\n    case \"item-clicked\": {\n      return withOut(noCmd(model), just({tag:\"item-selected\", data: msg.item.userData}))\n    }\n  }\n}\n\nfunction openSubMenu<T>(\n    menuId: string,\n    item: MenuItem<T>,\n    itemIndex: number,\n): Cmd<Msg<T>> {\n  if (item.subMenu.isNothing()) {\n    return Cmd.none();\n  }\n  return Task.attempt(\n      menuItemTask(menuId, itemIndex).map((e) => {\n        return Box.fromDomRect(e.getBoundingClientRect());\n      }),\n      (r) => gotItemBox(item, r),\n  );\n}\n\nconst windowEvents = new WindowEvents();\nconst documentEvents = new WindowEvents();\n\nexport function subscriptions<T>(model: Model<T>): Sub<Msg<T>> {\n  return Sub.batch([\n    windowEvents.on('resize', () =>\n        gotWindowDimensions(dim(window.innerWidth, window.innerHeight)),\n    ),\n    model.state.tag === 'open'\n        ? documentEvents.on('keydown', (e) => gotKeyDown(e.key))\n        : Sub.none(),\n  ]);\n}\n\nconst getWindowDimensions: Task<never, Dim> = Task.succeedLazy(() =>\n    dim(window.innerWidth, window.innerHeight),\n);\n\nfunction mapLastMenu<T>(\n    model: Model<T>,\n    f: (m: Model<T>) => [Model<T>, Cmd<Msg<T>>],\n): [Model<T>, Cmd<Msg<T>>] {\n  switch (model.child.type) {\n    case 'Nothing': {\n      // I'm the last model !\n      return f(model);\n    }\n    case 'Just': {\n      const mac = mapLastMenu(model.child.value, f);\n      return [{...model, child: just(mac[0])}, mac[1].map(childMsg)];\n    }\n  }\n}\n\nfunction collapseLastSubMenu<T>(model: Model<T>): [Model<T>, Cmd<Msg<T>>] {\n  switch (model.child.type) {\n    case \"Nothing\":\n      return noCmd(model);\n    case \"Just\": {\n      // I have a child : close it if he has no child !\n      const child = model.child.value;\n      if (child.child.isJust()) {\n        return Tuple.fromNative(collapseLastSubMenu(child))\n            .mapFirst(c => ({...model, child: just(c)}))\n            .mapSecond(cmd => cmd.map(childMsg))\n            .toNative();\n      } else {\n        return noCmd({\n          ...model,\n          child: nothing\n        })\n      }\n    }\n  }\n}\n\nfunction expandLastSubMenu<T>(model: Model<T>): [Model<T>, Cmd<Msg<T>>] {\n  return mapLastMenu(model, (lastModel) => {\n    return lastModel.menu.selectedItem\n        .map((selectedItem) => {\n          return selectedItem.subMenu\n              .map(() => {\n                console.log('selected item has sub menu...');\n                if (lastModel.uuid.type === 'Nothing') {\n                  return noCmd<Model<T>, Msg<T>>(lastModel);\n                }\n                const uuid = lastModel.uuid.value;\n                const cmd = lastModel.menu\n                    .indexOfItem(selectedItem)\n                    .map((itemIndex) => {\n                      console.log(\n                          'opening item #' +\n                          itemIndex +\n                          ' (' +\n                          selectedItem.userData +\n                          ')',\n                      );\n                      return openSubMenu(uuid, selectedItem, itemIndex);\n                    })\n                    .withDefaultSupply(() => Cmd.none<Msg<T>>());\n                return Tuple.t2n(lastModel, cmd);\n              })\n              .withDefaultSupply(() => {\n                console.log('selected item has no sub menu');\n                return noCmd(lastModel);\n              });\n          // return noCmd<Model<T>, Msg<T>>(lastModel);\n        })\n        .withDefaultSupply(() => {\n          console.log('no selected item in last model');\n          return noCmd(lastModel);\n        });\n  });\n}\n","import {box, Box} from \"./Box\";\nimport {dim, Dim} from \"./Dim\";\nimport {pos} from \"./Pos\";\n\nexport function adjustPopover(viewport: Dim, elem: Box): Box {\n\n  // display above or below and shrink size if necessary\n\n  const {x, y} = elem.p;\n  const {h, w} = elem.d;\n  const { h:vh, w:vw } = viewport;\n\n  let newY = y;\n  let newH = h;\n  const overflowDown = (y + h) - vh;\n  if (overflowDown > 0) {\n    // would overflow the bottom, check if we have enough space to move up\n    if (y > overflowDown) {\n      // enough space, move pos up\n      newY = y - overflowDown;\n    } else {\n      // not enough space, shrink the box to the viewport's height\n      newY = 0;\n      newH = vh;\n    }\n  }\n\n  let newX = x;\n  let newW = w;\n  const overflowRight = (x + w) - vw;\n  if (overflowRight > 0) {\n    // would overflow on the right, check if we have enough space to move left\n    if (x > overflowRight) {\n      // enough space, move left\n      newX = x - overflowRight;\n    } else {\n      newX = 0;\n      newW = vw;\n    }\n  }\n\n  return box(pos(newX, newY), dim(newW, newH));\n}\n","import * as React from 'react';\nimport {Menu, menuId, MenuItem, menuItemId} from \"./Menu\";\nimport {childMsg, Msg} from \"./Msg\";\nimport {Dispatcher, map} from \"react-tea-cup\";\nimport {ItemRenderer} from \"./ItemRenderer\";\nimport {Model} from \"./Model\";\nimport {stopEvent} from \"./StopEvent\";\n\nexport interface ViewMenuProps<T> {\n  model: Model<T>;\n  dispatch: Dispatcher<Msg<T>>;\n  renderer: ItemRenderer<T>;\n}\n\nexport function ViewMenu<T>(props: ViewMenuProps<T>) {\n  const {model, dispatch, renderer} = props;\n  const {menu, state, uuid, windowSize} = model;\n  if (uuid.type === 'Nothing') {\n    return <></>;\n  }\n  if (windowSize.type === 'Nothing') {\n    return <></>;\n  }\n\n  const renderItems = () => menu.elems.map((element, index) => {\n    switch (element.tag) {\n      case \"item\": {\n        return (\n            <ViewMenuItem\n                key={`item-${index}`}\n                uuid={uuid.value}\n                itemIndex={index}\n                menu={menu}\n                item={element}\n                {...props}\n            />\n        )\n      }\n      case \"separator\": {\n        return (\n            <div key={`sep-${index}`} className=\"tm--separator\"/>\n        )\n      }\n    }\n  });\n\n  switch (state.tag) {\n    case \"placing\": {\n      const {position} = state;\n      return (\n          <div\n              className=\"tm-placer\"\n              style={{\n                position: \"absolute\",\n                top: 0,\n                left: 0,\n                bottom: 0,\n                right: 0,\n                overflow: \"hidden\",\n              }}\n              onContextMenu={stopEvent}\n          >\n            <div\n                className=\"tm\"\n                id={menuId(uuid.value)}\n                style={{\n                  position: \"absolute\",\n                  top: position.y,\n                  left: position.x,\n                  visibility: \"hidden\",\n                }}\n                onContextMenu={stopEvent}\n            >\n              {renderItems()}\n            </div>\n          </div>\n      )\n    }\n    case \"open\": {\n      const {box} = state;\n      const {p, d} = box;\n      return (\n          <>\n            <div\n                className=\"tm\"\n                id={menuId(uuid.value)}\n                style={{\n                  position: \"absolute\",\n                  top: p.y,\n                  left: p.x,\n                  width: d.w,\n                  height: d.h\n                }}\n                onContextMenu={stopEvent}\n            >\n              {renderItems()}\n            </div>\n            {model.child\n                .map(child =>\n                    <ViewMenu model={child} dispatch={map(dispatch, childMsg)} renderer={renderer}/>\n                )\n                .withDefaultSupply(() => <></>)\n            }\n          </>\n      )\n    }\n  }\n}\n\nexport interface ViewMenuItemProps<T> {\n  uuid: string;\n  itemIndex: number;\n  menu: Menu<T>;\n  item: MenuItem<T>;\n  dispatch: Dispatcher<Msg<T>>;\n  renderer: ItemRenderer<T>;\n}\n\nexport function ViewMenuItem<T>(props: ViewMenuItemProps<T>) {\n  const {menu, item, renderer, dispatch, uuid, itemIndex} = props;\n  const selected = menu.isSelected(item);\n  const selectedClass = selected ? ' tm-selected' : '';\n  return (\n      <div\n          id={menuItemId(uuid, itemIndex)}\n          className={\"tm--item\" + selectedClass}\n          onMouseMove={() => dispatch({tag: 'mouse-move', item, itemIndex })}\n          onClick={() => dispatch({tag:'item-clicked', item})}\n      >\n        <div className=\"tm--item__content\">\n          {renderer(item.userData)}\n        </div>\n        {item.subMenu\n            .map(subMenu =>\n                <div className=\"tm--item__submenu-trigger\">\n                  ›\n                </div>\n            )\n            .withDefaultSupply(() => <></>)\n        }\n      </div>\n  );\n}\n\n","import {Cmd, Dispatcher, noCmd, Sub, map, Maybe, nothing, Tuple, just} from \"react-tea-cup\";\nimport * as React from 'react';\nimport {item, ItemRenderer, Menu, menu, Model as TModel, Msg as TMsg, Pos, separator, ViewMenu} from 'tea-pop';\nimport * as TM from 'tea-pop';\n\nexport interface Model {\n  readonly menuModel: Maybe<TModel<string>>;\n  readonly lastClicked: Maybe<string>;\n}\n\nexport type MenuModel = TModel<string>\nexport type MenuMsg = TMsg<string>\n\nexport type Msg =\n    | { tag: 'menu-msg', msg: MenuMsg }\n    | { tag: 'mouse-down', button: number, pos: Pos }\n\nfunction menuMsg(msg: MenuMsg): Msg {\n  return {\n    tag: \"menu-msg\",\n    msg\n  }\n}\n\nconst mySubMenu2: Menu<string> = menu([\n  item(\"Try\"),\n  item(\"Finally\")\n])\n\nconst mySubMenu1: Menu<string> = menu([\n  item(\"Do this\"),\n  item(\"Do that\"),\n  separator,\n  item(\"Another sub menu...\", mySubMenu2)\n])\n\nconst myMenu: Menu<string> = menu([\n  item(\"Copy\"),\n  item(\"Cut\"),\n  item(\"Paste\"),\n  separator,\n  item(\"Yalla\", mySubMenu1),\n  item(\"I am a bit longer\")\n]);\n\nconst myRenderer: ItemRenderer<string> = item => (\n    <span>{item}</span>\n);\n\nexport function init(): [Model, Cmd<Msg>] {\n  const model: Model = {\n    menuModel: nothing,\n    lastClicked: nothing,\n  }\n  return noCmd(model);\n}\n\nexport function view(dispatch: Dispatcher<Msg>, model: Model) {\n  return (\n      <>\n        <div\n            style={{\n              position: \"absolute\",\n              top: 0,\n              left: 0,\n              bottom: 0,\n              right: 0,\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\"\n            }}\n            onContextMenu={TM.stopEvent}\n            onMouseDown={e => {\n              dispatch({tag: 'mouse-down', button: e.button, pos: TM.pos(e.pageX, e.pageY)})\n            }}\n        >\n          <div>\n            {model.menuModel\n                .map(() => \"Menu is open\")\n                .withDefaultSupply(() =>\n                  model.lastClicked\n                      .map(lastClicked => \"You selected '\" + lastClicked + \"'\")\n                      .withDefault(\"Right-click anywhere\")\n                )\n            }\n          </div>\n        </div>\n        {model.menuModel\n            .map(menuModel =>\n                <ViewMenu model={menuModel} dispatch={map(dispatch, menuMsg)} renderer={myRenderer}/>\n            )\n            .withDefault(<></>)\n        }\n      </>\n  )\n}\n\nfunction updateMenu(model: Model, mac: [MenuModel, Cmd<MenuMsg>]): [Model, Cmd<Msg>] {\n  return Tuple.fromNative(mac)\n      .mapFirst(mm => ({...model, menuModel: just(mm)}))\n      .mapSecond(mc => mc.map(menuMsg))\n      .toNative();\n}\n\nexport function update(msg: Msg, model: Model): [Model, Cmd<Msg>] {\n  switch (msg.tag) {\n    case \"menu-msg\": {\n      if (model.menuModel.type === 'Nothing') {\n        return noCmd(model);\n      }\n      const menuModel = model.menuModel.value;\n      const mco = TM.update(msg.msg, menuModel);\n      const newModel: Model = {\n        ...model, menuModel: just(mco[0])\n      };\n      const cmd: Cmd<Msg> = mco[1].map(menuMsg);\n      const mac: [Model, Cmd<Msg>] = [newModel, cmd];\n      const outMsg: Maybe<TM.OutMsg<string>> = mco[2];\n      return outMsg\n          .map(out => {\n            switch (out.tag) {\n              case \"request-close\":\n                return closeMenu(model);\n              case \"item-selected\":\n                return closeMenu(model, just(out.data));\n            }\n          })\n          .withDefault(mac);\n    }\n    case \"mouse-down\": {\n      if (msg.button === 2) {\n        return updateMenu(model, TM.open(myMenu, msg.pos));\n      }\n      return noCmd({\n        ...model,\n        menuModel: nothing,\n        lastClicked: nothing\n      });\n    }\n  }\n}\n\nfunction closeMenu(model: Model, lastClicked: Maybe<string> = nothing): [Model, Cmd<Msg>] {\n  return noCmd({...model, menuModel: nothing, lastClicked })\n}\n\nexport function subscriptions(model: Model): Sub<Msg> {\n  return model.menuModel\n      .map(mm => TM.subscriptions(mm).map(menuMsg))\n      .withDefaultSupply(() => Sub.none());\n}\n","import React from 'react';\nimport './App.scss';\nimport {DevTools, Program} from \"react-tea-cup\";\nimport * as Demo from './Demo';\n\nfunction App() {\n  return (\n      <Program\n          init={Demo.init}\n          view={Demo.view}\n          update={Demo.update}\n          subscriptions={Demo.subscriptions}\n          devTools={DevTools.init<Demo.Model, Demo.Msg>(window)}\n      />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}